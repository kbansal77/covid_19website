{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/coronavirus.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","FetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","event","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5baa0d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__xX9We\",\"card\":\"Cards_card__2Lcri\",\"infected\":\"Cards_infected__3d4VM\",\"recovered\":\"Cards_recovered__2AILd\",\"deaths\":\"Cards_deaths__3rEKB\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ( { data: {confirmed, recovered, deaths, lastUpdate } } ) =>{\r\n    if(!confirmed){\r\n        return 'Loading....'\r\n    }\r\n\r\n    return(\r\n       <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={confirmed.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={recovered.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovries of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={deaths.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n       </div> \r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst Url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = Url;\r\n\r\n  if(country){\r\n    changeableUrl=`${Url}/countries/${country}`\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get( changeableUrl );\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async() =>{\r\n    try{\r\n        const {data} =await axios.get(`${Url}/daily`);\r\n        const modifiedData= data.map((dailyData)=>({\r\n          confirmed: dailyData.confirmed.total,\r\n          deaths: dailyData.deaths.total,\r\n          date: dailyData.reportDate\r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n  try{\r\n    const { data: { countries } } = await axios.get(`${Url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) =>{\r\n    const[dailyData, setDailyData]= useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI()\r\n    },[]);\r\n\r\n    const lineChart =(\r\n        dailyData.length\r\n        ?(\r\n        <Line\r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets:[{\r\n                    data: dailyData.map(({confirmed})=> confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data: dailyData.map(({deaths})=> deaths),\r\n                    label: 'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor: 'rgba(255, 0, 0,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />): null\r\n    );\r\n\r\n    const barChart=(\r\n        confirmed\r\n        ?(\r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label:'People',\r\n                    backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display : false},\r\n                title:{display:true, text:`Current state in ${country}`}\r\n            }}\r\n            />\r\n        ):null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country? barChart: lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n\r\n    const [FetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n        setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.FormControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(event) => handleCountryChange(event.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {FetchedCountries.map((country, i)=> <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nimport coronaImage from './images/coronavirus.png'\r\n\r\nclass App extends React.Component{\r\n    state={\r\n        data:{},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData= await fetchData();\r\n        \r\n        this.setState({ data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange= async(country) =>{\r\n        const fetchedData= await fetchData(country);\r\n        \r\n        this.setState({ data: fetchedData, country: country});\r\n    }\r\n\r\n    render(){\r\n        const{data, country}=this.state\r\n        return(\r\n            <div className={styles.container}>\r\n            <img className={styles.image} src={coronaImage} alt=\"Covid !9\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1gnzE\",\"image\":\"App_image__3CyjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3_5Ji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1eQN0\"};","module.exports = __webpack_public_path__ + \"static/media/coronavirus.d7265326.png\";"],"sourceRoot":""}